<?php


/**
 * This class adds structure of 'factura' table to 'profit' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Wed Feb 26 02:00:52 2014
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.profit.map
 */
class FacturaMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.profit.map.FacturaMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(FacturaPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(FacturaPeer::TABLE_NAME);
		$tMap->setPhpName('Factura');
		$tMap->setClassname('Factura');

		$tMap->setUseIdGenerator(false);

		$tMap->addPrimaryKey('FACT_NUM', 'FactNum', 'INTEGER', true, null);

		$tMap->addColumn('CONTRIB', 'Contrib', 'BOOLEAN', true, null);

		$tMap->addColumn('NOMBRE', 'Nombre', 'VARCHAR', true, 60);

		$tMap->addColumn('RIF', 'Rif', 'CHAR', true, 18);

		$tMap->addColumn('NIT', 'Nit', 'CHAR', true, 18);

		$tMap->addColumn('NUM_CONTROL', 'NumControl', 'INTEGER', true, null);

		$tMap->addColumn('STATUS', 'Status', 'CHAR', true, 1);

		$tMap->addColumn('COMENTARIO', 'Comentario', 'LONGVARCHAR', true, 2147483647);

		$tMap->addColumn('DESCRIP', 'Descrip', 'VARCHAR', true, 60);

		$tMap->addColumn('SALDO', 'Saldo', 'FLOAT', true, 20);

		$tMap->addColumn('FEC_EMIS', 'FecEmis', 'VARCHAR', true, null);

		$tMap->addColumn('FEC_VENC', 'FecVenc', 'VARCHAR', true, null);

		$tMap->addForeignKey('CO_CLI', 'CoCli', 'CHAR', 'clientes', 'CO_CLI', true, 10);

		$tMap->addForeignKey('CO_VEN', 'CoVen', 'CHAR', 'vendedor', 'CO_VEN', true, 6);

		$tMap->addForeignKey('CO_TRAN', 'CoTran', 'CHAR', 'transpor', 'CO_TRAN', true, 6);

		$tMap->addColumn('DIR_ENT', 'DirEnt', 'LONGVARCHAR', true, 2147483647);

		$tMap->addForeignKey('FORMA_PAG', 'FormaPag', 'CHAR', 'condicio', 'CO_COND', true, 6);

		$tMap->addColumn('TOT_BRUTO', 'TotBruto', 'FLOAT', true, 20);

		$tMap->addColumn('TOT_NETO', 'TotNeto', 'FLOAT', true, 20);

		$tMap->addColumn('GLOB_DESC', 'GlobDesc', 'FLOAT', true, 20);

		$tMap->addColumn('TOT_RECA', 'TotReca', 'FLOAT', true, 20);

		$tMap->addColumn('PORC_GDESC', 'PorcGdesc', 'CHAR', true, 15);

		$tMap->addColumn('PORC_RECA', 'PorcReca', 'CHAR', true, 15);

		$tMap->addColumn('TOTAL_UC', 'TotalUc', 'FLOAT', true, 20);

		$tMap->addColumn('TOTAL_CP', 'TotalCp', 'FLOAT', true, 20);

		$tMap->addColumn('TOT_FLETE', 'TotFlete', 'FLOAT', true, 20);

		$tMap->addColumn('MONTO_DEV', 'MontoDev', 'FLOAT', true, 20);

		$tMap->addColumn('TOTKLU', 'Totklu', 'FLOAT', true, 20);

		$tMap->addColumn('ANULADA', 'Anulada', 'BOOLEAN', true, null);

		$tMap->addColumn('IMPRESA', 'Impresa', 'BOOLEAN', true, null);

		$tMap->addColumn('IVA', 'Iva', 'FLOAT', true, 20);

		$tMap->addColumn('IVA_DEV', 'IvaDev', 'FLOAT', true, 20);

		$tMap->addColumn('NUMCOM', 'Numcom', 'INTEGER', true, null);

		$tMap->addColumn('TASA', 'Tasa', 'FLOAT', true, 20);

		$tMap->addColumn('DIS_CEN', 'DisCen', 'LONGVARCHAR', true, 2147483647);

		$tMap->addColumn('VUELTO', 'Vuelto', 'FLOAT', true, 20);

		$tMap->addColumn('SERIALES', 'Seriales', 'INTEGER', true, null);

		$tMap->addColumn('TASAG', 'Tasag', 'FLOAT', true, 20);

		$tMap->addColumn('TASAG10', 'Tasag10', 'FLOAT', true, 20);

		$tMap->addColumn('TASAG20', 'Tasag20', 'FLOAT', true, 20);

		$tMap->addColumn('ID', 'Id', 'INTEGER', true, null);

	} // doBuild()

} // FacturaMapBuilder
