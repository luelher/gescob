<?php


/**
 * This class adds structure of 'cobros' table to 'profit' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Mon Feb  8 20:58:34 2010
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.profit.map
 */
class CobrosMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.profit.map.CobrosMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(CobrosPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(CobrosPeer::TABLE_NAME);
		$tMap->setPhpName('Cobros');
		$tMap->setClassname('Cobros');

		$tMap->setUseIdGenerator(false);

		$tMap->addForeignPrimaryKey('COB_NUM', 'CobNum', 'INTEGER' , 'reng_cob', 'COB_NUM', true, null);

		$tMap->addColumn('RECIBO', 'Recibo', 'CHAR', true, 15);

		$tMap->addForeignKey('CO_CLI', 'CoCli', 'CHAR', 'clientes', 'CO_CLI', true, 10);

		$tMap->addForeignKey('CO_VEN', 'CoVen', 'CHAR', 'vendedor', 'CO_VEN', true, 6);

		$tMap->addColumn('FEC_COB', 'FecCob', 'DATE', true, null);

		$tMap->addColumn('ANULADO', 'Anulado', 'BOOLEAN', true, null);

		$tMap->addColumn('MONTO', 'Monto', 'DECIMAL', true, 20);

		$tMap->addColumn('DPPAGO', 'Dppago', 'DECIMAL', true, 20);

		$tMap->addColumn('MONT_NCR', 'MontNcr', 'DECIMAL', true, 20);

		$tMap->addColumn('NCR', 'Ncr', 'INTEGER', true, null);

		$tMap->addColumn('TCOMI_PORC', 'TcomiPorc', 'DECIMAL', true, 20);

		$tMap->addColumn('TCOMI_LINE', 'TcomiLine', 'DECIMAL', true, 20);

		$tMap->addColumn('TCOMI_ART', 'TcomiArt', 'DECIMAL', true, 20);

		$tMap->addColumn('TCOMI_CONC', 'TcomiConc', 'DECIMAL', true, 20);

		$tMap->addColumn('FECCOM', 'Feccom', 'VARCHAR', true, 255);

		$tMap->addColumn('TASA', 'Tasa', 'DECIMAL', true, 20);

		$tMap->addForeignKey('MONEDA', 'Moneda', 'CHAR', 'moneda', 'CO_MONE', true, 6);

		$tMap->addColumn('NUMCOM', 'Numcom', 'INTEGER', true, null);

		$tMap->addColumn('DIS_CEN', 'DisCen', 'LONGVARCHAR', true, 2147483647);

		$tMap->addColumn('CAMPO1', 'Campo1', 'VARCHAR', true, 60);

		$tMap->addColumn('CAMPO2', 'Campo2', 'VARCHAR', true, 60);

		$tMap->addColumn('CAMPO3', 'Campo3', 'VARCHAR', true, 60);

		$tMap->addColumn('CAMPO4', 'Campo4', 'VARCHAR', true, 60);

		$tMap->addColumn('CAMPO5', 'Campo5', 'VARCHAR', true, 60);

		$tMap->addColumn('CAMPO6', 'Campo6', 'VARCHAR', true, 60);

		$tMap->addColumn('CAMPO7', 'Campo7', 'VARCHAR', true, 60);

		$tMap->addColumn('CAMPO8', 'Campo8', 'VARCHAR', true, 60);

		$tMap->addColumn('CO_US_IN', 'CoUsIn', 'CHAR', true, 4);

		$tMap->addColumn('FE_US_IN', 'FeUsIn', 'VARCHAR', true, 255);

		$tMap->addColumn('CO_US_MO', 'CoUsMo', 'CHAR', true, 4);

		$tMap->addColumn('FE_US_MO', 'FeUsMo', 'VARCHAR', true, 255);

		$tMap->addColumn('CO_US_EL', 'CoUsEl', 'CHAR', true, 4);

		$tMap->addColumn('FE_US_EL', 'FeUsEl', 'VARCHAR', true, 255);

		$tMap->addColumn('RECARGO', 'Recargo', 'BOOLEAN', true, null);

		$tMap->addColumn('ADEL_NUM', 'AdelNum', 'INTEGER', true, null);

		$tMap->addColumn('REVISADO', 'Revisado', 'CHAR', true, 1);

		$tMap->addColumn('TRASNFE', 'Trasnfe', 'CHAR', true, 1);

		$tMap->addForeignKey('CO_SUCU', 'CoSucu', 'CHAR', 'almacen', 'CO_ALMA', true, 6);

		$tMap->addColumn('ROWGUID', 'Rowguid', 'CHAR', true, 16);

		$tMap->addColumn('DESCRIP', 'Descrip', 'VARCHAR', true, 60);

		$tMap->addColumn('NUM_DEV', 'NumDev', 'INTEGER', true, null);

		$tMap->addColumn('DEVDINERO', 'Devdinero', 'BOOLEAN', true, null);

		$tMap->addColumn('NUM_TURNO', 'NumTurno', 'INTEGER', true, null);

		$tMap->addColumn('AUX01', 'Aux01', 'DECIMAL', true, 20);

		$tMap->addColumn('AUX02', 'Aux02', 'VARCHAR', true, 30);

		$tMap->addColumn('ORIGEN', 'Origen', 'CHAR', false, 1);

		$tMap->addColumn('ORIGEN_D', 'OrigenD', 'CHAR', false, 20);

	} // doBuild()

} // CobrosMapBuilder
